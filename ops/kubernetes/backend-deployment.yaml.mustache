kind: "Service"
apiVersion: "v1"
metadata:
  name: {{appName}}
spec:
  type: LoadBalancer
  ports:
    - port: 80
      targetPort: external
  selector:
    app: {{appName}}
    tier: backend
---
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: {{appName}}-backend
spec:
  replicas: 1
  revisionHistoryLimit: 5
  strategy:
    type: "RollingUpdate"  
  selector:
    matchLabels:
      app: "{{appName}}"
      tier: backend
      track: stable
  template:
    metadata:
      labels:
        app: "{{appName}}"
        tier: backend
        track: stable
    spec:
      containers:
        - name: "{{appName}}-backend"
          image: "{{remoteDockerImage}}"
          envFrom:
            - configMapRef:
                name: "{{appName}}-envvars" 
          terminationMessagePath: "/tmp/my-log"   
          resources:
            requests:
              memory: 10Mi
              cpu: 50m
            limits:
              memory: 100Mi
              cpu: 200m
          livenessProbe:
            httpGet:
              path: /health
              port: external
            initialDelaySeconds: 5
            timeoutSeconds: 1
          readinessProbe:
            httpGet:
              path: /health
              port: external
            initialDelaySeconds: 5
            timeoutSeconds: 1
          ports:
            - containerPort: 8080
              name: "external"
              protocol: "TCP"
